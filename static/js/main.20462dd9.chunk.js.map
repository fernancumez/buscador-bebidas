{"version":3,"sources":["components/Header.js","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","fetch","res","json","data","drinks","console","error","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","URI","obtenerRecetas","Formulario","guardarBusqueda","useContext","obtenerDatosReceta","evt","target","name","onSubmit","preventDefault","type","placeholder","onChange","map","id","strCategory","ModalContext","ModalProvider","idreceta","guardarIdReceta","informacion","guardarReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20462dd9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-alert\">\r\n      <h1>Busca recetas de bebidas</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createContext, useState, useEffect } from \"react\";\r\n\r\n// Crear el Context\r\nexport const CategoriasContext = createContext();\r\n\r\n// Provider es donde se encuentran las funciones y state\r\nconst CategoriasProvider = (props) => {\r\n  // Crear el state del Context\r\n  const [categorias, guardarCategorias] = useState([]);\r\n\r\n  // Ejecutar el llamado a la API\r\n  useEffect(() => {\r\n    const obtenerCategorias = async () => {\r\n      try {\r\n        let URI = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\r\n\r\n        const res = await fetch(URI);\r\n        const data = await res.json();\r\n\r\n        const { drinks } = data;\r\n        guardarCategorias(drinks);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    obtenerCategorias();\r\n  }, []);\r\n\r\n  return (\r\n    <CategoriasContext.Provider value={{ categorias }}>\r\n      {props.children}\r\n    </CategoriasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoriasProvider;\r\n","import { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n  const [recetas, guardarRecetas] = useState([]);\r\n  const [busqueda, buscarRecetas] = useState({\r\n    nombre: \"\",\r\n    categoria: \"\",\r\n  });\r\n\r\n  const [consultar, guardarConsultar] = useState(false);\r\n  const { nombre, categoria } = busqueda;\r\n\r\n  useEffect(() => {\r\n    if (consultar) {\r\n      const obtenerRecetas = async () => {\r\n        try {\r\n          const URI = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\r\n\r\n          const res = await fetch(URI);\r\n          const data = await res.json();\r\n\r\n          const { drinks } = data;\r\n          guardarRecetas(drinks);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n      obtenerRecetas();\r\n    }\r\n  }, [busqueda, consultar, nombre, categoria]);\r\n\r\n  return (\r\n    <RecetasContext.Provider\r\n      value={{ buscarRecetas, guardarConsultar, recetas }}\r\n    >\r\n      {props.children}\r\n    </RecetasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecetasProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { CategoriasContext } from \"../context/CategoriasContext\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n\r\nconst Formulario = () => {\r\n  const [busqueda, guardarBusqueda] = useState({\r\n    nombre: \"\",\r\n    categoria: \"\",\r\n  });\r\n\r\n  const { categorias } = useContext(CategoriasContext);\r\n  const { buscarRecetas, guardarConsultar } = useContext(RecetasContext);\r\n\r\n  // Funcion para leer los contendios\r\n  const obtenerDatosReceta = (evt) => {\r\n    const { name, value } = evt.target;\r\n\r\n    guardarBusqueda({ ...busqueda, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"col-12\"\r\n      onSubmit={(evt) => {\r\n        evt.preventDefault();\r\n        buscarRecetas(busqueda);\r\n        guardarConsultar(true);\r\n      }}\r\n    >\r\n      <fieldset className=\"text-center\">\r\n        <legend>Busca bebidas por Categorías o Ingredientes</legend>\r\n      </fieldset>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            className=\"form-control\"\r\n            placeholder=\"Buscar por Ingredientes\"\r\n            onChange={obtenerDatosReceta}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <select\r\n            name=\"categoria\"\r\n            className=\"form-control\"\r\n            onChange={obtenerDatosReceta}\r\n          >\r\n            <option value=\"\">-- Selecciona Categoría --</option>\r\n            {categorias.map((categoria, id) => (\r\n              <option key={id} value={categoria.strCategory}>\r\n                {categoria.strCategory}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-block btn-primary\"\r\n            value=\"Buscar bebida\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import { createContext, useState, useEffect } from \"react\";\r\n\r\n// Crear el context\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n  // State del provider\r\n  const [idreceta, guardarIdReceta] = useState(null);\r\n  const [informacion, guardarReceta] = useState({});\r\n\r\n  // Una vez que tenemos una receta, llamamos la API\r\n  useEffect(() => {\r\n    const obtenerReceta = async () => {\r\n      try {\r\n        if (!idreceta) return;\r\n\r\n        let URI = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`;\r\n\r\n        const res = await fetch(URI);\r\n        const data = await res.json();\r\n\r\n        const { drinks } = data;\r\n        guardarReceta(drinks[0]);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    obtenerReceta();\r\n  }, [idreceta]);\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{ informacion, guardarIdReceta, guardarReceta }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ModalContext } from \"../context/ModalContext\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 450,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Receta = ({ receta }) => {\r\n  // Configuracion del modal de Material UI\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Extraer los valores del context\r\n  const { informacion, guardarIdReceta, guardarReceta } = useContext(\r\n    ModalContext\r\n  );\r\n\r\n  // Muestra y formatea los ingredientes\r\n  const mostrarIngredientes = (informacion) => {\r\n    let ingredientes = [];\r\n    for (let i = 1; i < 16; i++) {\r\n      if (informacion[`strIngredient${i}`]) {\r\n        ingredientes.push(\r\n          <li key={i}>\r\n            {informacion[`strIngredient${i}`]} {informacion[`strMeasure${i}`]}\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n\r\n    return ingredientes;\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-\">{receta.strDrink}</h2>\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={receta.strDrinkThumb}\r\n          alt={`Imagen de ${receta.strDrink}`}\r\n        />\r\n        <div className=\"card-body\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn block btn-primary\"\r\n            onClick={() => {\r\n              guardarIdReceta(receta.idDrink);\r\n              handleOpen();\r\n            }}\r\n          >\r\n            Ver Receta\r\n          </button>\r\n          <Modal\r\n            open={open}\r\n            onClose={() => {\r\n              guardarIdReceta(null);\r\n              guardarReceta({});\r\n              handleClose();\r\n            }}\r\n          >\r\n            <div style={modalStyle} className={classes.paper}>\r\n              <h2>{informacion.strDrink}</h2>\r\n              <h3 className=\"mt-4\">Instrucciones</h3>\r\n              <p>{informacion.strInstructions}</p>\r\n              <img\r\n                src={informacion.strDrinkThumb}\r\n                alt={informacion.strDrink}\r\n                className=\"img-fluid my-4\"\r\n              />\r\n              <h3>Ingredientes y cantidades</h3>\r\n              <ul>{mostrarIngredientes(informacion)}</ul>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Receta;\r\n","import React, { useContext } from \"react\";\r\nimport Receta from \"../components/Receta\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n\r\nconst ListaRecetas = () => {\r\n  const { recetas } = useContext(RecetasContext);\r\n\r\n  return (\r\n    <div className=\"row mt-5\">\r\n      {recetas.map((receta) => (\r\n        <Receta key={receta.idDrink} receta={receta} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaRecetas;\r\n","import React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Formulario from \"./components/Formulario\";\r\nimport ListaRecetas from \"./components/ListaRecetas\";\r\nimport CategoriasProvider from \"./context/CategoriasContext\";\r\nimport RecetasProvider from \"./context/RecetasContext\";\r\nimport ModalProvider from \"./context/ModalContext\";\r\n\r\nfunction App() {\r\n  return (\r\n    <CategoriasProvider>\r\n      <RecetasProvider>\r\n        <ModalProvider>\r\n          <Header />\r\n          <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n              <Formulario />\r\n            </div>\r\n            <ListaRecetas />\r\n          </div>\r\n        </ModalProvider>\r\n      </RecetasProvider>\r\n    </CategoriasProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./styles/index.css\";\r\nimport \"./assets/bootstrap.min.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}